/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package CustomerWorkArea;

import Business.WorkQueue.CustomerCustomizedWorkRequest;
import Business.customer.MasterOrderList;
import Business.customer.PersonalisedOrder;
import Business.customer.PersonalisedOrderItem;
import business.organization.CustomerOrganization;
import business.ecosystem.Ecosystem;
import business.enterprise.Enterprise;
import business.enterprise.customerCareEnterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.StoreOrganization;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saloni
 */
public class CustomerWorkAreaManagementJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWorkAreaManagementJPanel
     */
    private JPanel userProcessContainer;
    private MasterOrderList mod;
    private PersonalisedOrder order;
    private CustomerOrganization customerOrganization;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Ecosystem business;
    
    public CustomerWorkAreaManagementJPanel(JPanel userProcessContainer, MasterOrderList mod, PersonalisedOrder order, UserAccount userAccount, Organization organization, Enterprise enterprise, Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.mod = mod;
        this.order = order;
        this.customerOrganization = (CustomerOrganization) organization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.business = business;
        customerTextField.setText(userAccount.getUsername());
        
        populateTable();
    }
    
    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) customerCartjTable.getModel();
        dtm.setRowCount(0);

        for (PersonalisedOrderItem oi : order.getOrderItemList()) {
            Object[] row = new Object[2];
            row[0] = oi;
            row[1] = oi.getPersonaliseProduct().getPrice();
            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customerTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerCartjTable = new javax.swing.JTable();
        viewDetailjBtn = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        placeOrderjBtn = new javax.swing.JButton();

        customerTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        customerTextField.setEnabled(false);
        customerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTextFieldActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        jLabel8.setText("Hello!");

        customerCartjTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        customerCartjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderItemId", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerCartjTable);

        viewDetailjBtn.setBackground(new java.awt.Color(204, 204, 255));
        viewDetailjBtn.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        viewDetailjBtn.setText("View Details");
        viewDetailjBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailjBtnActionPerformed(evt);
            }
        });

        deletejButton.setBackground(new java.awt.Color(204, 204, 255));
        deletejButton.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        deletejButton.setText("Delete");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });

        placeOrderjBtn.setBackground(new java.awt.Color(204, 204, 255));
        placeOrderjBtn.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        placeOrderjBtn.setText("Place Order");
        placeOrderjBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderjBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(viewDetailjBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(162, 162, 162)
                        .addComponent(deletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)
                        .addComponent(placeOrderjBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(placeOrderjBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewDetailjBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void customerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTextFieldActionPerformed

    }//GEN-LAST:event_customerTextFieldActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void viewDetailjBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailjBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow = customerCartjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view data", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        PersonalisedOrderItem oi = (PersonalisedOrderItem) customerCartjTable.getValueAt(selectedRow, 0);
        ViewOrderDetailsJPanel vjp = new ViewOrderDetailsJPanel(userProcessContainer, oi);
        userProcessContainer.add("SupplierWorkAreaJPanel", vjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_viewDetailjBtnActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerCartjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to delete data", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            PersonalisedOrderItem oi = (PersonalisedOrderItem) customerCartjTable.getValueAt(selectedRow, 0);
            order.removeOrderItem(oi);
            populateTable();
        }
    }//GEN-LAST:event_deletejButtonActionPerformed

    private void placeOrderjBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderjBtnActionPerformed

        int selectedRow = customerCartjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view data", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //mod.addOrderFromInput(order);

        CustomerCustomizedWorkRequest cworkrequest = new CustomerCustomizedWorkRequest();
        cworkrequest.setOrder(order);
        cworkrequest.setStatus("Placed");
        cworkrequest.setCustomerSender(userAccount);
        userAccount.getWorkQueue().getWorkRequestList().add(cworkrequest);

        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof customerCareEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof StoreOrganization) {

                            organization.getWorkQueue().getWorkRequestList().add(cworkrequest);

                        }
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Order Placed Successfully", "Information!!", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_placeOrderjBtnActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable customerCartjTable;
    private javax.swing.JTextField customerTextField;
    private javax.swing.JButton deletejButton;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton placeOrderjBtn;
    private javax.swing.JButton viewDetailjBtn;
    // End of variables declaration//GEN-END:variables
}
